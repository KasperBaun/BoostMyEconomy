@page "/"
<PageTitle>Login</PageTitle>
@page "/login"

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<MudContainer MaxWidth="MaxWidth.Small" Class="mt-10">
    <MudPaper Class="px-10 pt-4 pb-4 mt-4 rounded-xl" Elevation="4">
        <MudGrid>
            <MudItem xs="12">
                <div class="d-flex justify-center">
                        <MudIcon Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Primary" Style="height:50%; width:50%;"/>
                </div>
            </MudItem>
            <MudItem xs="12">
                <div class="d-flex justify-center">
                    <MudText Typo="Typo.h4">Boost My Economy</MudText>
                </div>
            </MudItem>
            <MudItem xs="12">
                <div class="d-flex justify-center">
                    <MudText>Personal Finance Workspace to analyze spending in detail</MudText>
                </div>
            </MudItem>
             <MudItem xs="12">
                <div class="d-flex justify-center">
                    <MudText>Boost your economy today!</MudText>
                </div>
            </MudItem>
           
            <!-- Email Field -->
            <MudItem xs="12">
                <MudTextField T="string" Label="E-mail" Variant="Variant.Outlined"
                Required="false" RequiredError="Email is required!"
                                  Validation="@(new EmailAddressAttribute() {ErrorMessage = "Email address is invalid!"})"
                              />
            </MudItem>

            <!-- Password Field -->
            <MudItem xs="12">
                <MudPaper>
                <MudTextField  
                        T="string" @bind-Value="Password" 
                        Label="Password" 
                        Variant="Variant.Outlined" 
                        InputType="@PasswordInput" 
                        Adornment="Adornment.End" 
                        AdornmentColor="Color.Primary" 
                        AdornmentIcon="@PasswordInputIcon" 
                        OnAdornmentClick="TogglePasswordHidden" />
                </MudPaper>
            </MudItem>

            <MudItem xs="12" Class="d-flex justify-space-between align-center">
                <MudCheckBox T="bool" Label="Remember me?" Color="Color.Primary" Class="ml-n1"></MudCheckBox> <MudLink Href="/account/forgot-password">Forgot password?</MudLink>
            </MudItem>

            <!-- Login button -->
            <MudItem xs="12" Class="d-flex justify-center">
                <MudButton Disabled="@_processing" ButtonType="ButtonType.Submit" OnClick="OnLoginClicked" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Class="rounded-lg" Style="width: 100%; height: 50px;">
                    @if (_processing)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                        <MudText Class="ms-2">Processing</MudText>
                    }
                    else
                    {
                        <MudText>Login</MudText>
                    }
                </MudButton>
            </MudItem>

        </MudGrid>
     </MudPaper>

     <MudGrid>
        <MudItem xs="12">
            <div class="d-flex justify-start mt-4">
                <MudText>Don't have an account?   <MudLink Href="/register"> Register here! </MudLink></MudText>
            </div>
        </MudItem>
    </MudGrid>

</MudContainer>


@code {
    /* This block of code is used to handle user-login when pressing the Login button */ 
    private bool _processing = false;

    async Task OnLoginClicked()
    {
        _processing = true;
        await Task.Delay(2000);
        _processing = false;
    }


    public double? Amount { get; set; }
    public int? Weight { get; set; }
    public string Password { get; set;} = "";

    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordHidden()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

}