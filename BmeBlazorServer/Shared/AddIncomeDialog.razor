@using MudBlazor
@using System
@using BmeModels
@using BmeBlazorServer.Services
@inject ISnackbar Snackbar
@inject ICategoryService CategoryService
@implements IDisposable

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudDialog Class="rounded-xl">
        <DialogContent>
            <MudTextField  T="string" Label="Name"></MudTextField>
            <MudSelect  T="string" Label="Category" AnchorOrigin="Origin.BottomCenter">
                @foreach (Category c in @categories)
                {
                    <MudSelectItem Value="@(c.Title)" />
                }
                <MudSelectItem Value="@("Cafe Latte")" />
                <MudSelectItem Value="@("Espresso")" />
                <MudSelectItem Value="@("Irish Coffee")" />
            </MudSelect>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</MudContainer>


@code {
    public List<Category> categories = new List<Category>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            CategoryService.OnChange += StateHasChanged;
            bool dataReady = await CategoryService.InitializeService();
            if (dataReady)
            {
                // Do stuff
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }
    //categories = CategoryService.GetCategories(); 

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new();

    Transaction NewTransaction = new Transaction()
        {
            Id = 1, // Get this from database but how?
            UserId = 1,
            MadeAt = DateTime.Now.Date.ToString(),
            Value = 0,
            Type = "Income",
            CategoryId = 0,
            SubcategoryId = 0,
            Description = "",
            Source = "",
    };

    private void Cancel()
    {
        MudDialog?.Cancel();
    }

    private void Submit()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Configuration.SnackbarVariant = Variant.Filled;
        Snackbar.Configuration.VisibleStateDuration = 3000;
        Random rand = new Random();
        bool incomeAdded = rand.NextDouble() > 0.5;
       
        /* If user exists, reset password*/
        if(incomeAdded){
            Snackbar.Add("Income added succesfully.", Severity.Success);
            MudDialog?.Close(DialogResult.Ok(true));
        }   
        else
        {
            Snackbar.Add("Could not add income. Please try again.", Severity.Error);
            MudDialog?.Close(DialogResult.Cancel());
        }
    }
}