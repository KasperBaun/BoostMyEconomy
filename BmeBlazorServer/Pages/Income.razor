@page "/income"
@using BmeModels;
@inject IDialogService DialogService

<PageTitle>Income</PageTitle>

<AuthorizeView>
    <Authorized>
    <!-- Container for the entire dashboard -->
    <MudContainer Class="mt-6 px-8" MaxWidth="MaxWidth.False">

        <MudGrid Spacing="4" Class="mt-6">

             <!-- Title -->
            <MudItem xs="12" sm="6" md="3" >
                <MudText Typo="Typo.h2" Class="ma-auto" Color="Color.Primary">Income</MudText>
            </MudItem>

            <!-- Datepicker -->
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Elevation="25" Class="rounded-xl">
                    <MudToolBar>
                        <MudDateRangePicker Class="ma-auto" StartMonth="@DateTime.Now.AddMonths(-1)" @bind-DateRange="_dateRange" Color="Color.Primary" AdornmentColor="Color.Primary" IconSize="Size.Medium" />
                    </MudToolBar>
                </MudPaper>
            </MudItem>

             <!-- Search -->
            <MudItem xs="12" sm="6" md="3" >
                <MudPaper Elevation="25" Class="rounded-xl">
                    <MudToolBar>
                        <MudTextField Class="ma-auto" @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" IconSize="Size.Medium"></MudTextField>
                    </MudToolBar>
                </MudPaper>
            </MudItem>

             <!-- Add expense -->
            <MudItem xs="12" sm="6" md="3">
                <MudPaper Elevation="25" Class="rounded-xl">
                    <MudToolBar Class="px-0">
                    <MudButton Variant="Variant.Filled" 
                        Class="rounded-xl mud-height-full mud-button-full-width" 
                        StartIcon="@Icons.Material.Outlined.Add" 
                        OnClick="OpenAddIncomeDialog"
                        Color="Color.Primary">
                        Add income
                    </MudButton>
                    </MudToolBar>
                </MudPaper>
            </MudItem>

            <!-- Income table -->
            <MudItem xs="12" sm="12" md="9">
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12">
                            <MudTable
                                Height="360px"
                                Items="@Transactions" 
                                Elevation="25"
                                Class="rounded-xl"
                                Style="margin:auto; overflow-y:hidden" 
                                Dense="@dense" 
                                Hover="true" 
                                Bordered="false" 
                                Striped="@striped"
                                Filter="new Func<Transaction,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1"
                                >
                            <HeaderContent>
                                <MudTh>Date</MudTh>
                                <MudTh>Source</MudTh>
                                <MudTh>Value</MudTh>
                            </HeaderContent>

                            <RowTemplate
                                Context="IncomeTable"
                            >
                                <MudTd DataLabel="Date">@IncomeTable.MadeAt</MudTd>
                                <MudTd DataLabel="Source">@IncomeTable.Source</MudTd>
                                <MudTd DataLabel="Value">@IncomeTable.Value</MudTd>
                            </RowTemplate>

                            <PagerContent >
                                <MudSwitch @bind-Checked="@dense" Color="Color.Primary" Class="ml-1">Fold/unfold</MudSwitch>
                                <MudSwitch @bind-Checked="@striped" Color="Color.Primary" Class="ml-1">Striped</MudSwitch>
                                <MudTablePager />
                            </PagerContent>

                        </MudTable>
                    </MudItem>

                    <!-- History -->
                    <MudItem xs="12" sm="12" md="6">
                        <MudPaper Elevation="2" Class="rounded-xl" Style="height: 300px;">
                            <MudText Typo="Typo.h5">History</MudText>
                            <MudChart 
                                ChartType="ChartType.Line" 
                                ChartSeries="@incomeHistory" 
                                ChartOptions="incomeHistoryOptions"
                                XAxisLabels="@incomeHistoryLabels"
                                Class="ma-auto">

                            </MudChart>
                        </MudPaper>
                    </MudItem>

                    <!--Sources-->
                    <MudItem xs="12" sm="12" md="6">
                        <MudPaper Elevation="2" Class=" rounded-xl" Style="height: 300px;">
                            <MudText Typo="Typo.h5">Sources</MudText>
                            <MudChart ChartType="ChartType.Donut" LegendPosition="Position.Right" Width="225px" Height="225px"
                                InputData="@data" InputLabels="@labels">
                            </MudChart>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudItem>

            <MudItem xs="12" sm="12" md="3">
                <MudGrid>
                    <!-- User info -->
                    <MudItem xs="12">
                        <MudPaper Elevation="2" Class="rounded-xl" Style="height: 250px;">
                            <MudText Typo="Typo.h5">User information</MudText>
                        </MudPaper>
                    </MudItem>

                    <!-- Recent transactions -->
                    <MudItem xs="12">
                        <MudPaper Elevation="2" Class="rounded-xl" Style="height: 499px;">
                        
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudItem>
         
        </MudGrid>
    </MudContainer>
   </Authorized>
    <NotAuthorized>
        <img width="600" class="center" src="https://i.kym-cdn.com/entries/icons/original/000/002/144/You_Shall_Not_Pass!_0-1_screenshot.jpg" />
        <Login/>
    </NotAuthorized>
</AuthorizeView>


@code {
    public double[] data = { 67, 21, 8, 4 };
    public string[] labels = { "Novozymes", "Børnepenge", "Udbytte", "Fritidsjob" };

    DateRange _dateRange = new DateRange(new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1), DateTime.Now.Date);

    /* Add income */
    async Task OpenAddIncomeDialog()
    {
        var options = new DialogOptions() { MaxWidth = MaxWidth.Large, CloseOnEscapeKey = true };
        var dialog = DialogService.Show<AddIncomeDialog>("Add income", options);
        var result = await dialog.Result;

        if (result.Cancelled)
        {
            // Snackbar with could not add income
        }

        // Snackbar with income added succesfully
        dialog.Close();
    }

    /* Income table */
    private bool dense = false;
    private bool striped = false;
    private string searchString1 = "";
    private Transaction selectedItem1 = null;
    private HashSet<Transaction> selectedItems = new HashSet<Transaction>();

    private void HandleOnIncomeRowClicked()
    {

    }

    private IEnumerable<Transaction> Transactions = new List<Transaction>(){
        new Transaction() { CategoryId = 1, Description = "Icons.Material.Filled.Home", Id = 1, Value = -500, Source = "IKEA", UserId = 1, SubcategoryId = 5, Type = "Expense", MadeAt = DateOnly.FromDateTime(DateTime.Today.Date).ToString() },
        new Transaction() { CategoryId = 4, Description = " ", Id = 2, Value = 500, Source = "F24", UserId = 1, SubcategoryId = 5, Type = "Income", MadeAt = DateOnly.FromDateTime(DateTime.Today.Date).ToString()},
        new Transaction() { CategoryId = 2, Description = " ", Id = 3, Value = -500, Source = "Danske Bank", UserId = 1, SubcategoryId = 5, Type = "Expense", MadeAt = DateOnly.FromDateTime(DateTime.Today.Date).ToString() },
        new Transaction() { CategoryId = 3, Description = " ", Id = 4, Value = -500, Source = "Zalando", UserId = 1, SubcategoryId = 5, Type = "Income", MadeAt = DateOnly.FromDateTime(DateTime.Today.Date).ToString() }
    };

    public bool FilterFunc1(Transaction transaction) => FilterFunc(transaction, searchString1);

    public bool FilterFunc(Transaction transaction, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (transaction.Type.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (transaction.Source != null)
        {
            if (transaction.Source.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        }
        if (transaction.Value.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{transaction.Description} {transaction.CategoryId} {transaction.MadeAt}".Contains(searchString))
            return true;
        return false;
    }

    /* History */

    private ChartOptions incomeHistoryOptions = new ChartOptions()
        {
            DisableLegend = true,
            LineStrokeWidth = 10,
            InterpolationOption = InterpolationOption.EndSlope,
            YAxisFormat = "c2"
    };
    public List<ChartSeries> incomeHistory = new List<ChartSeries>()
    {
        new ChartSeries() { Data = new double[] { 35, 41, 35, 51, 49, 62, 69, 91, 148, 64, 39, 25 } },
    };
    public string[] incomeHistoryLabels = { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };

}
